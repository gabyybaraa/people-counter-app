name: iOS-ipa-build

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-ios:
    name: iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - run: flutter pub get

      - run: pod repo update
        working-directory: ios

    
      - name: Clean previous builds
        run: |
          flutter clean
          cd ios
          rm -rf build/ Payload/ Runner.app/
          cd ..

      - run: flutter build ios --release --no-codesign

   
      - name: Debug build output
        run: |
          echo "=== Build directory contents ==="
          ls -la build/
          echo "=== iOS build contents ==="
          ls -la build/ios/
          echo "=== iPhoneOS build contents ==="
          ls -la build/ios/iphoneos/
        working-directory: .

    
      - name: clean build artifacts
        run: |
          # Remove Payload directory if it exists
          if [ -d "Payload" ]; then
            rm -rf Payload/
          fi
          # Remove Runner.app if it exists
          if [ -d "Runner.app" ]; then
            rm -rf Runner.app/
          fi
          # Ensure clean state
          echo "Build directory cleaned successfully"
        working-directory: build/ios/iphoneos

      - name: Prepare Payload
        run: |
          # Create Payload directory
          mkdir -p Payload
          # Check if Runner.app exists and move it
          if [ -d "Runner.app" ]; then
            mv Runner.app Payload/
            echo "Runner.app moved to Payload successfully"
          else
            echo "ERROR: Runner.app not found!"
            echo "Available files:"
            ls -la
            exit 1
          fi
        working-directory: build/ios/iphoneos

      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: ${{ github.sha }}
          overwrite: true
          body: "This is first release"
